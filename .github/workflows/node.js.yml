# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: fullstack_challenge

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"

jobs:
  Testing:
    runs-on: ubuntu-latest
    env:
      working-directory: rdicidr-0.1.0/
    steps: 
      - uses: actions/setup-node@v3
        with:
          node-version: '15.10'
          
      - uses: actions/checkout@v3
      
      - name: install dependencies to the agent
        run: | 
            npm install -g prettier
      
      - name: install npm 
        run: npm install
        working-directory: ${{ env.working-directory }}
        
      - name: Linter
        run: npm run lint
        working-directory: ${{ env.working-directory }}
        
      - name: Formatter
        run: npm run prettier
        working-directory: ${{ env.working-directory }}
        
      - name: Test (Jest)
        run: CI=true npm run test
        working-directory: ${{ env.working-directory }}
  
  build_the_app:
    runs-on: ubuntu-latest
    needs: Testing
    env:
      working-directory: rdicidr-0.1.0/
    steps: 
      - uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rdicidr:0.1.0
          context: rdicidr-0.1.0/
      
  infra_prod: 
    runs-on: ubuntu-latest
    needs: build_the_app
    env:
      working-directory: infra/
    steps:
      
      - uses: hashicorp/setup-terraform@v2
      
      - uses: actions/checkout@v3
        with:
          ref: main
          
      - name: terraform init
        run: terraform init 
        working-directory: ${{ env.working-directory }}
        
      - name: terraform plan
        run: terraform plan
        working-directory: ${{ env.working-directory }}
        
      - name: deploy
        run: terraform apply --auto-aprove
        working-directory: ${{ env.working-directory }}
        
  infra_devel: 
      runs-on: ubuntu-latest
      needs: build_the_app
      env:
        working-directory: infra/
      steps:

        - uses: hashicorp/setup-terraform@v2

        - uses: actions/checkout@v3
          with:
            ref: devel

        - name: terraform init
          run: terraform init 
          working-directory: ${{ env.working-directory }}

        - name: terraform plan
          run: terraform plan
          working-directory: ${{ env.working-directory }}

        - name: deploy
          run: terraform apply --auto-aprove
          working-directory: ${{ env.working-directory }}
          
  infra_stage: 
      runs-on: ubuntu-latest
      needs: build_the_app
      env:
        working-directory: infra/
      steps:

        - uses: hashicorp/setup-terraform@v2

        - uses: actions/checkout@v3
          with:
            ref: stage

        - name: terraform init
          run: terraform init 
          working-directory: ${{ env.working-directory }}

        - name: terraform plan
          run: terraform plan
          working-directory: ${{ env.working-directory }}

        - name: deploy
          run: terraform apply --auto-aprove
          working-directory: ${{ env.working-directory }}    
    
    
